
Technical Support Manual
---------------------------
Table of Contents:
	I. Table of Contents.
	II. Overview
	III. Classes
	IV. Events
	V. Functions
--------------------------------------
II. Overview :
Website: cuschedulebuilder.azurewebsites.net

The CU schedule builder scrapes https://apps.concord.edu/schedules/seatstaken.php every 5 minutes in order to update course data. The project consist of a front-end by means of HTML,CSS, jQuery, and DataTables. The back end consist of a MySQL database, A web-scraper built in python, and a PHP server processing script.

The process of events are as follows:
The webscraper constantly scrapes Concord's website every 5 minutes and updates the MySQL database.
The AJAX address in the front end tables.js file is set to the server side PHP script that queries the database.
The PHP script queries the database and returns the information via JSON format to the front end.
The front end receives this information and inserts it into a table that supports dynamic multi-column searching that does not require page refreshes
The courses offered table continues to be constantly updated every 5 minutes.
-------------------------------
How To Setup
-------------------------------
The project requires web hosting and a MySQL database to run. Setup by FTPing the repo to the www folder of the web hosting service you are using. Edit the connection sections in the dbscrape.py and server_processing.php with the proper login and host information for your database. If the web scraper autorunning and updating the database is desired you must use a hosting service that supports Python and make a cron expression to autorun the script with what time interval you wish.
---------------------------------------
III. Classes and Functions

Classes
	A. Course

---------------------------------------
IV. Events
	A. $(document).ready(function () {})
		i. Defines the variables for the DataTables, courseTable and scheduleTable, and sets the initiale settings for the tables
			a. Once courseTable completes its initialization, a function populates the dropdown select boxes for specified columns whose
			   column header contains the selectSearch in its ID.
			b. courseTable creates text input search boxes for column headers that contain textSearch in its ID.
	 
	B. courseTable.on('click', '#addButton', function() {} )
		i. Adds a click event to the add button in the table and when the button is clicked, the row is removed from the course table and
		   added to the scheduleTable and tells the courseTable to redraw itself.
			a. Calls the wipeWeekTable function.
	 
	C. scheduleTable.on('click', '#removeButton', function() {} )
		i. Adds a click event to the remove button in the table. When clicked, the row is removed from the scheduleTable and added to
		   the courseTable.
			a. Calls the wipeWeekTable function.
	 
	D. $("#weekTableButton").click(function() {} )
		i. Generates the week at a glance table based on the courses listed in scheduleTable.
      
---------------------------------------
V. Functions
	A. wipeWeekTable()
		i. If the week at a glance table container is displayed on the screen,
			a. Fade the container to minumum opacity
			b. Remove the contents of the container in which the week at a glance table is contained.
			
	B. prettyifyTime(time)
		i. Converts an integer or a string of an integer within the range 100 to 2400 into a 12-hour clock format string and returns 
		   the formatted string.
